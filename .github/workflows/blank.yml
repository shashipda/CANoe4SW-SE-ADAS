# This is a basic workflow to help you get started with Actions 

 

name: CI 

 

# Controls when the workflow will run 

on: 

  # Triggers the workflow on push or pull request events but only for the "main" branch 

  push: 

    branches: [ "main" ] 

  pull_request: 

    branches: [ "main" ] 

 

  # Allows you to run this workflow manually from the Actions tab 

  workflow_dispatch: 

 

# A workflow run is made up of one or more jobs that can run sequentially or in parallel 

jobs: 

  # This workflow contains a single job called "build" 

  build: 

    # The type of runner that the job will run on 

    runs-on: self-hosted

 

    # Steps represent a sequence of tasks that will be executed as part of the job 

    steps: 

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it 

      - uses: actions/checkout@v4 

      # Runs a single command using the runners shell 

      - name: Run a one-line script 

        shell: powershell 

        run: D:/shashi/vector/Virtualisation/canoe4SW-SE/SOMEIPBasicAutosar/run.ps1

      - name: Convert test reports to XUnit format
        shell: powershell
        run: |
             & "C:/Program Files/Vector CANoe4SW Server Edition 18/Exec64/ReportViewerCli.exe" `
             -d "D:/shashi/vector/Virtualisation/canoe4SW-SE/SOMEIPBasicAutosar/working-dir/TestReports" -xu

             
      - name: Display test results
        uses: dorny/test-reporter@v2.1.0
        with:
          name: Test results                             # Name of the check run which will be created
          path: "D:/shashi/vector/Virtualisation/canoe4SW-SE/SOMEIPBasicAutosar/working-dir/TestReports/SOMEIPBasicAutosarTests_xunit.xml"   # Path to test results
          reporter: java-junit                           # Format of test results
          fail-on-error: 'false'

                     

      
